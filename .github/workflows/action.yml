name: My Workflow

on:
    workflow_dispatch:
    push:
      branches:
        - main
  

jobs:
  zap-scan:
    runs-on: ubuntu-latest
    needs: linter
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Set up Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/1.29.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose

    - name: Build and Run Docker Compose
      run: |
        cd docker
        docker-compose build
        docker-compose up -d

    - name: Zap-name
      run: |
        echo "ZAP_NAME=ZAP_SCAN $(TZ=America/Argentina/Buenos_Aires date +"%Y-%m-%d %T" | tr ':' '.') - #${{ github.run_number }}"  >> $GITHUB_ENV
      
    - name: ZAP Scan
      id: scan
      uses: zaproxy/action-full-scan@v0.8.0
      with:
        target: 'http://127.0.0.1:3000/'
        artifact_name: ${{ env.ZAP_NAME }} 

  linter:
    runs-on: ubuntu-latest
#    needs: zap-scan
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          # super-linter needs the full git history to get the
          # list of files that changed across commits
          fetch-depth: 0

      - name: Lint Code Base
        uses: github/super-linter@v5
        env:
          VALIDATE_ALL_CODEBASE: true
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

      - name: Move lint report
        run: mv /tmp/lint /github/workspace/lint-report
          # Guardar el informe de lint como un artefacto
      - name: Upload lint report
        uses: actions/upload-artifact@v2
        with:
          name: lint-report
          path: lint-report
        
        
      

  job1:
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      output1: ${{ steps.step1.outputs.test }}
      output2: ${{ steps.step2.outputs.test }}
    steps:
      - id: step1
        run: echo "test=hello" >> "$GITHUB_OUTPUT"
      - id: step2
        run: echo "test=world" >> "$GITHUB_OUTPUT"

  job2:
    runs-on: ubuntu-latest
    needs: job1
    steps:
      - env:
          OUTPUT1: ${{needs.job1.outputs.output1}}
          OUTPUT2: ${{needs.job1.outputs.output2}}
        run: echo "$OUTPUT1 $OUTPUT2" 